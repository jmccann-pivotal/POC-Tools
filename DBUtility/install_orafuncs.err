CREATE SCHEMA oracompat;
CREATE SCHEMA
SET search_path = oracompat;
SET
BEGIN;
BEGIN
CREATE OR REPLACE FUNCTION nvl(anyelement, anyelement)
RETURNS anyelement
AS '$libdir/orafunc','ora_nvl'
LANGUAGE C IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION add_months(day date, value int)
RETURNS date
AS '$libdir/orafunc'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION last_day(value date)
RETURNS date
AS '$libdir/orafunc'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION next_day(value date, weekday text)
RETURNS date
AS '$libdir/orafunc'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION next_day(value date, weekday integer)
RETURNS date
AS '$libdir/orafunc', 'next_day_by_index'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION months_between(date1 date, date2 date)
RETURNS numeric
AS '$libdir/orafunc'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION trunc(value timestamp with time zone, fmt text)
RETURNS timestamp with time zone
AS '$libdir/orafunc', 'ora_timestamptz_trunc'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION trunc(value timestamp with time zone)
RETURNS timestamp with time zone
AS $$ SELECT trunc($1, 'DDD'); $$
LANGUAGE 'SQL' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION trunc(value date, fmt text)
RETURNS date
AS '$libdir/orafunc', 'ora_date_trunc'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION trunc(value date)
RETURNS date
AS $$ SELECT $1; $$
LANGUAGE 'SQL' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION round(value timestamp with time zone, fmt text)
RETURNS timestamp with time zone
AS '$libdir/orafunc', 'ora_timestamptz_round'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION round(value timestamp with time zone)
RETURNS timestamp with time zone
AS $$ SELECT round($1, 'DDD'); $$
LANGUAGE 'SQL' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION round(value date, fmt text)
RETURNS date
AS '$libdir/orafunc','ora_date_round'
LANGUAGE 'C' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION round(value date)
RETURNS date
AS $$ SELECT $1; $$
LANGUAGE 'SQL' IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION instr(str text, patt text, start int, nth int)
RETURNS int
AS '$libdir/orafunc','plvstr_instr4'
LANGUAGE C IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION instr(str text, patt text, start int)
RETURNS int
AS '$libdir/orafunc','plvstr_instr3'
LANGUAGE C IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION instr(str text, patt text)
RETURNS int
AS '$libdir/orafunc','plvstr_instr2'
LANGUAGE C IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION reverse(str text, start int, _end int)
RETURNS text
AS '$libdir/orafunc','plvstr_rvrs'
LANGUAGE C IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION reverse(str text, start int)
RETURNS text
AS $$ SELECT reverse($1,$2,NULL);$$
LANGUAGE SQL IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION reverse(str text)
RETURNS text
AS $$ SELECT reverse($1,1,NULL);$$
LANGUAGE SQL IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION concat(text, text)
RETURNS text
AS '$libdir/orafunc','ora_concat'
LANGUAGE C IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION concat(text, anyarray)
RETURNS text
AS 'SELECT concat($1, $2::text)'
LANGUAGE sql IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION concat(anyarray, text)
RETURNS text
AS 'SELECT concat($1::text, $2)'
LANGUAGE sql IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION concat(anyarray, anyarray)
RETURNS text
AS 'SELECT concat($1::text, $2::text)'
LANGUAGE sql IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION nanvl(float4, float4)
RETURNS float4 AS
$$ SELECT CASE WHEN $1 = 'NaN' THEN $2 ELSE $1 END; $$
LANGUAGE sql IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION nanvl(float8, float8)
RETURNS float8 AS
$$ SELECT CASE WHEN $1 = 'NaN' THEN $2 ELSE $1 END; $$
LANGUAGE sql IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION nanvl(numeric, numeric)
RETURNS numeric AS
$$ SELECT CASE WHEN $1 = 'NaN' THEN $2 ELSE $1 END; $$
LANGUAGE sql IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION bitand(bigint, bigint)
RETURNS bigint
AS $$ SELECT $1 & $2; $$
LANGUAGE sql IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION listagg1_transfn(text, text)
RETURNS text
AS '$libdir/orafunc','orafce_listagg1_transfn'
LANGUAGE C IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION listagg2_transfn(text, text, text)
RETURNS text
AS '$libdir/orafunc','orafce_listagg2_transfn'
LANGUAGE C IMMUTABLE;
CREATE FUNCTION
DROP AGGREGATE IF EXISTS oracompat.listagg(text);
NOTICE:  aggregate oracompat.listagg(text) does not exist, skipping
DROP AGGREGATE
CREATE  AGGREGATE oracompat.listagg(text) (
  SFUNC=oracompat.listagg1_transfn,
  STYPE=text
);
CREATE AGGREGATE
DROP AGGREGATE IF EXISTS oracompat.listagg(text, text);
NOTICE:  aggregate oracompat.listagg(text,text) does not exist, skipping
DROP AGGREGATE
CREATE AGGREGATE oracompat.listagg(text, text) (
  SFUNC=oracompat.listagg2_transfn,
  STYPE=text
);
CREATE AGGREGATE
CREATE OR REPLACE FUNCTION nvl2(anyelement, anyelement, anyelement)
RETURNS anyelement
AS '$libdir/orafunc','ora_nvl2'
LANGUAGE C IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION lnnvl(bool)
RETURNS bool
AS '$libdir/orafunc','ora_lnnvl'
LANGUAGE C IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION dump("any") 
RETURNS varchar
AS '$libdir/orafunc', 'orafce_dump'
LANGUAGE C;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION dump("any", integer)
RETURNS varchar
AS '$libdir/orafunc', 'orafce_dump'
LANGUAGE C;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION nlssort(text, text)
RETURNS bytea
AS '$libdir/orafunc', 'ora_nlssort'
LANGUAGE 'C' IMMUTABLE;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION substr(str text, start int)
RETURNS text
AS '$libdir/orafunc','oracle_substr2'
LANGUAGE C IMMUTABLE STRICT;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION substr(str text, start int, len int)
RETURNS text
AS '$libdir/orafunc','oracle_substr3'
LANGUAGE C IMMUTABLE STRICT;
CREATE FUNCTION
COMMIT;
COMMIT
